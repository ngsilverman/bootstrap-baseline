@baseBottom: round( (@baseLineHeight - @minFontSize) / 2 + @minFontSize * @descenderRatio );

.baseline( @fontSize, @topPadding: 0, @bottomPadding: 0 ) {
	@lineHeight: ceil( @fontSize / @baseLineHeight ) * @baseLineHeight;
	@top: round( (@lineHeight - @fontSize) / 2 + @fontSize * @descenderRatio ) - @baseBottom;

	// @bottom is a module of @baseLineHeight
	@prebottom: (@baseLineHeight - @top) / @baseLineHeight;
	@bottom: round( (@prebottom - floor(@prebottom)) * @baseLineHeight );

	font-size: @fontSize;
	line-height: @lineHeight;

	.baseline-position( @top + @topPadding, @bottom + @bottomPadding );
}

.baseline-position( @top, @bottom ) when( @top < 0 ) {
	padding-bottom: 0; // in case @bottom + @top is < 0
	padding-bottom: @bottom + @top;
	padding-top: 0;
	position: relative;
	top: @top;
}

.baseline-position( @top, @bottom ) when( @top >= 0 ) {
	padding-bottom: @bottom;
	padding-top: @top;
}
